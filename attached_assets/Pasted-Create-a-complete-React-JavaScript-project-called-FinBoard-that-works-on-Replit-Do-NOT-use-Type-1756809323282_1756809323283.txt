Create a complete React (JavaScript) project called "FinBoard" that works on Replit. Do NOT use TypeScript or Next.js. Use only React with Vite or CRA setup (choose whichever works better on Replit). The project must include:

## Core Features
1. A customizable finance dashboard where users can:
   - Add widgets: Table, Finance Cards (Watchlist, Market Gainers, Performance, Financial Data), Charts (Candlestick/Line).
   - Remove widgets easily.
   - Drag-and-drop to rearrange widget positions.
   - Configure each widget (title, metrics, API endpoint, refresh interval).

2. API Integration:
   - Integrate with at least one free financial API (Alpha Vantage preferred, fallback Finnhub or any free stock API).
   - Allow users to input their API key via settings modal.
   - Dynamic field selection from API response (simple JSON field picker).
   - Real-time updates with configurable intervals (30s minimum).

3. Data Persistence:
   - Store widget configuration in browser storage (localStorage).
   - Restore dashboard automatically on refresh.
   - Allow export/import of dashboard config as JSON.

4. UI & UX:
   - Use Tailwind CSS for styling (dark mode default, add toggle for light/dark theme).
   - Add responsive layout (desktop & mobile).
   - Show loading & error states for widgets.

5. Advanced Features (optional if time permits):
   - Pre-built dashboard templates.
   - WebSocket (or mock) for real-time stock price streaming.
   - Currency/percentage formatting for displayed values.

## Technical Stack
- React (JavaScript)
- State Management: Redux Toolkit
- Data Visualization: Recharts
- Drag-and-Drop: react-beautiful-dnd or dnd-kit
- Storage: localStorage
- Deployment-ready for Replit

## Project Requirements
- Clean folder structure:
  - src/components (widgets, UI elements)
  - src/pages (Dashboard.jsx, Settings.jsx)
  - src/store (Redux slices)
  - src/utils (API helper, data mapper)
- Comment major sections and explain key parts.
- Include example widgets (preloaded watchlist or stock chart).
- Write in simple, maintainable JavaScript.

## Deliverable
- One fully working React app with:
  - A homepage: Finance dashboard builder.
  - Settings modal for API key and theme switching.
  - Ability to add/remove/configure widgets dynamically.

Generate all the files needed (index.html, main.jsx, App.jsx, Tailwind config, etc.) so I can run it directly in Replit.
